# Simple configuration for an HTTP proxy listening on port 80 on all
# interfaces and forwarding requests to a single backend "servers" with a
# single server "server1" listening on 127.0.0.1:8000
global
    daemon
    maxconn 256
    log stderr format raw daemon notice     # send important events to stderr
    log stdout format raw daemon
    crt-base /var/lib/haproxy/certs
    tune.ssl.default-dh-param 2048

defaults
    mode http
    timeout connect 10s
    timeout client 120s
    timeout server 180s

# Browse to http://localhost:1936/haproxy?stats to see status of backends
listen  stats 
        bind 0.0.0.0:1936
        mode            http
        log             global
        maxconn 10
        timeout queue   100s
        stats enable
        stats hide-version
        stats refresh 30s
        stats show-node
        stats auth admin:password
        stats uri /haproxy?stats

# Listen on 443, forward /cas traffic to CAS, otherwise send to Gitlab
frontend https-in
    bind *:443 ssl crt site.pem
    acl cas path_beg /cas
    use_backend cas-backend if cas
    default_backend gitlab-backend

# CAS backend re-encrypt traffic to CAS, don't verify cert
# Host of host.docker.internal works on docker for windows/mac 
backend cas-backend
    server cas1 host.docker.internal:8443 check ssl verify none maxconn 32

# Gitlab backend re-encrypt traffic to Gitlab, don't verify cert
# Host of host.docker.internal works on docker for windows/mac 
backend gitlab-backend
    server gitlab1 host.docker.internal:8444 check ssl verify none maxconn 32
